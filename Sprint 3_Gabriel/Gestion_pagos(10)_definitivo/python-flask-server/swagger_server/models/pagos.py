# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Pagos(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, dni_profesor: int=None, id: int=None, nomina: int=None, carga_trabajo: int=None, impreso: str=None, recordatorio: str=None):
        """
        Pagos - a model defined in Swagger

        :param dni_profesor: The dni_profesor of this Pagos.
        :type dni_profesor: int
        :param id: The id of this Pagos.
        :type id: int
        :param nomina: The nomina of this Pagos.
        :type nomina: int
        :param carga_trabajo: The carga_trabajo of this Pagos.
        :type carga_trabajo: int
        :param impreso: The impreso of this Pagos.
        :type impreso: str
        :param recordatorio: The recordatorio of this Pagos.
        :type recordatorio: str
        """
        self.swagger_types = {
            'dni_profesor': int,
            'id': int,
            'nomina': int,
            'carga_trabajo': int,
            'impreso': str,
            'recordatorio': str
        }

        self.attribute_map = {
            'dni_profesor': 'dni_profesor',
            'id': 'id',
            'nomina': 'nomina',
            'carga_trabajo': 'carga_trabajo',
            'impreso': 'impreso',
            'recordatorio': 'recordatorio'
        }

        self._dni_profesor = dni_profesor
        self._id = id
        self._nomina = nomina
        self._carga_trabajo = carga_trabajo
        self._impreso = impreso
        self._recordatorio = recordatorio

    @classmethod
    def from_dict(cls, dikt) -> 'Pagos':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The pagos of this Pagos.
        :rtype: Pagos
        """
        return deserialize_model(dikt, cls)

    @property
    def dni_profesor(self) -> int:
        """
        Gets the dni_profesor of this Pagos.

        :return: The dni_profesor of this Pagos.
        :rtype: int
        """
        return self._dni_profesor

    @dni_profesor.setter
    def dni_profesor(self, dni_profesor: int):
        """
        Sets the dni_profesor of this Pagos.

        :param dni_profesor: The dni_profesor of this Pagos.
        :type dni_profesor: int
        """

        self._dni_profesor = dni_profesor

    @property
    def id(self) -> int:
        """
        Gets the id of this Pagos.

        :return: The id of this Pagos.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """
        Sets the id of this Pagos.

        :param id: The id of this Pagos.
        :type id: int
        """

        self._id = id

    @property
    def nomina(self) -> int:
        """
        Gets the nomina of this Pagos.

        :return: The nomina of this Pagos.
        :rtype: int
        """
        return self._nomina

    @nomina.setter
    def nomina(self, nomina: int):
        """
        Sets the nomina of this Pagos.

        :param nomina: The nomina of this Pagos.
        :type nomina: int
        """

        self._nomina = nomina

    @property
    def carga_trabajo(self) -> int:
        """
        Gets the carga_trabajo of this Pagos.

        :return: The carga_trabajo of this Pagos.
        :rtype: int
        """
        return self._carga_trabajo

    @carga_trabajo.setter
    def carga_trabajo(self, carga_trabajo: int):
        """
        Sets the carga_trabajo of this Pagos.

        :param carga_trabajo: The carga_trabajo of this Pagos.
        :type carga_trabajo: int
        """

        self._carga_trabajo = carga_trabajo

    @property
    def impreso(self) -> str:
        """
        Gets the impreso of this Pagos.

        :return: The impreso of this Pagos.
        :rtype: str
        """
        return self._impreso

    @impreso.setter
    def impreso(self, impreso: str):
        """
        Sets the impreso of this Pagos.

        :param impreso: The impreso of this Pagos.
        :type impreso: str
        """

        self._impreso = impreso

    @property
    def recordatorio(self) -> str:
        """
        Gets the recordatorio of this Pagos.

        :return: The recordatorio of this Pagos.
        :rtype: str
        """
        return self._recordatorio

    @recordatorio.setter
    def recordatorio(self, recordatorio: str):
        """
        Sets the recordatorio of this Pagos.

        :param recordatorio: The recordatorio of this Pagos.
        :type recordatorio: str
        """

        self._recordatorio = recordatorio

