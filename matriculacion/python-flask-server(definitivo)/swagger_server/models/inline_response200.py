# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class InlineResponse200(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, apellidos: str=None, creditos: str=None, curso: str=None, dni: int=None, nombre: str=None, titulacion: str=None):
        """
        InlineResponse200 - a model defined in Swagger

        :param apellidos: The apellidos of this InlineResponse200.
        :type apellidos: str
        :param creditos: The creditos of this InlineResponse200.
        :type creditos: str
        :param curso: The curso of this InlineResponse200.
        :type curso: str
        :param dni: The dni of this InlineResponse200.
        :type dni: int
        :param nombre: The nombre of this InlineResponse200.
        :type nombre: str
        :param titulacion: The titulacion of this InlineResponse200.
        :type titulacion: str
        """
        self.swagger_types = {
            'apellidos': str,
            'creditos': str,
            'curso': str,
            'dni': int,
            'nombre': str,
            'titulacion': str
        }

        self.attribute_map = {
            'apellidos': 'apellidos',
            'creditos': 'creditos',
            'curso': 'curso',
            'dni': 'dni',
            'nombre': 'nombre',
            'titulacion': 'titulacion'
        }

        self._apellidos = apellidos
        self._creditos = creditos
        self._curso = curso
        self._dni = dni
        self._nombre = nombre
        self._titulacion = titulacion

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.
        :rtype: InlineResponse200
        """
        return deserialize_model(dikt, cls)

    @property
    def apellidos(self) -> str:
        """
        Gets the apellidos of this InlineResponse200.

        :return: The apellidos of this InlineResponse200.
        :rtype: str
        """
        return self._apellidos

    @apellidos.setter
    def apellidos(self, apellidos: str):
        """
        Sets the apellidos of this InlineResponse200.

        :param apellidos: The apellidos of this InlineResponse200.
        :type apellidos: str
        """

        self._apellidos = apellidos

    @property
    def creditos(self) -> str:
        """
        Gets the creditos of this InlineResponse200.

        :return: The creditos of this InlineResponse200.
        :rtype: str
        """
        return self._creditos

    @creditos.setter
    def creditos(self, creditos: str):
        """
        Sets the creditos of this InlineResponse200.

        :param creditos: The creditos of this InlineResponse200.
        :type creditos: str
        """

        self._creditos = creditos

    @property
    def curso(self) -> str:
        """
        Gets the curso of this InlineResponse200.

        :return: The curso of this InlineResponse200.
        :rtype: str
        """
        return self._curso

    @curso.setter
    def curso(self, curso: str):
        """
        Sets the curso of this InlineResponse200.

        :param curso: The curso of this InlineResponse200.
        :type curso: str
        """

        self._curso = curso

    @property
    def dni(self) -> int:
        """
        Gets the dni of this InlineResponse200.

        :return: The dni of this InlineResponse200.
        :rtype: int
        """
        return self._dni

    @dni.setter
    def dni(self, dni: int):
        """
        Sets the dni of this InlineResponse200.

        :param dni: The dni of this InlineResponse200.
        :type dni: int
        """
        if dni is None:
            raise ValueError("Invalid value for `dni`, must not be `None`")

        self._dni = dni

    @property
    def nombre(self) -> str:
        """
        Gets the nombre of this InlineResponse200.

        :return: The nombre of this InlineResponse200.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """
        Sets the nombre of this InlineResponse200.

        :param nombre: The nombre of this InlineResponse200.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def titulacion(self) -> str:
        """
        Gets the titulacion of this InlineResponse200.

        :return: The titulacion of this InlineResponse200.
        :rtype: str
        """
        return self._titulacion

    @titulacion.setter
    def titulacion(self, titulacion: str):
        """
        Sets the titulacion of this InlineResponse200.

        :param titulacion: The titulacion of this InlineResponse200.
        :type titulacion: str
        """

        self._titulacion = titulacion

