# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Dni(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, dni: int=None, nombre: str=None, apellidos: str=None, asignatura: str=None, plazos: int=None):
        """
        Dni - a model defined in Swagger

        :param dni: The dni of this Dni.
        :type dni: int
        :param nombre: The nombre of this Dni.
        :type nombre: str
        :param apellidos: The apellidos of this Dni.
        :type apellidos: str
        :param asignatura: The asignatura of this Dni.
        :type asignatura: str
        :param plazos: The plazos of this Dni.
        :type plazos: int
        """
        self.swagger_types = {
            'dni': int,
            'nombre': str,
            'apellidos': str,
            'asignatura': str,
            'plazos': int
        }

        self.attribute_map = {
            'dni': 'dni',
            'nombre': 'Nombre',
            'apellidos': 'Apellidos',
            'asignatura': 'Asignatura',
            'plazos': 'Plazos'
        }

        self._dni = dni
        self._nombre = nombre
        self._apellidos = apellidos
        self._asignatura = asignatura
        self._plazos = plazos

    @classmethod
    def from_dict(cls, dikt) -> 'Dni':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The dni of this Dni.
        :rtype: Dni
        """
        return deserialize_model(dikt, cls)

    @property
    def dni(self) -> int:
        """
        Gets the dni of this Dni.

        :return: The dni of this Dni.
        :rtype: int
        """
        return self._dni

    @dni.setter
    def dni(self, dni: int):
        """
        Sets the dni of this Dni.

        :param dni: The dni of this Dni.
        :type dni: int
        """
        if dni is None:
            raise ValueError("Invalid value for `dni`, must not be `None`")

        self._dni = dni

    @property
    def nombre(self) -> str:
        """
        Gets the nombre of this Dni.

        :return: The nombre of this Dni.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """
        Sets the nombre of this Dni.

        :param nombre: The nombre of this Dni.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def apellidos(self) -> str:
        """
        Gets the apellidos of this Dni.

        :return: The apellidos of this Dni.
        :rtype: str
        """
        return self._apellidos

    @apellidos.setter
    def apellidos(self, apellidos: str):
        """
        Sets the apellidos of this Dni.

        :param apellidos: The apellidos of this Dni.
        :type apellidos: str
        """

        self._apellidos = apellidos

    @property
    def asignatura(self) -> str:
        """
        Gets the asignatura of this Dni.

        :return: The asignatura of this Dni.
        :rtype: str
        """
        return self._asignatura

    @asignatura.setter
    def asignatura(self, asignatura: str):
        """
        Sets the asignatura of this Dni.

        :param asignatura: The asignatura of this Dni.
        :type asignatura: str
        """

        self._asignatura = asignatura

    @property
    def plazos(self) -> int:
        """
        Gets the plazos of this Dni.

        :return: The plazos of this Dni.
        :rtype: int
        """
        return self._plazos

    @plazos.setter
    def plazos(self, plazos: int):
        """
        Sets the plazos of this Dni.

        :param plazos: The plazos of this Dni.
        :type plazos: int
        """

        self._plazos = plazos

